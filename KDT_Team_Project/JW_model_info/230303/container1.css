#container1{
    width:99vw;
    height:100vh;
    position:relative;
    
}
#container1_blur{
    width:99vw;
    height:100vh;
    z-index: 5;
    position:absolute;

}
#container1 >main{
    width:100%;
    height:90%;
    background-image: url('../../files/porsche6.jpg');
    background-size: cover;
    background-position: center center;
    display:flex;
    justify-content: center;
    
 
}

#container1 >header{
    width:100%;
    display:flex;
    height:10%;
    /* justify-content : 가로축 기준  
       align-items : 세로축 기준*/
    justify-content: end;
    align-items: center;
   
}
header > #menu{
    margin-right:20px;
    /* z-index:10; */
}
#menu:hover{
    animation:menuBar 0.5s;
    animation-fill-mode: both;
}

#list1_1, #list2_1, #list3_1, #list4_1, #list5_1{
    display:none;
}

#container1 > header > #list{
    width:40vw;
    display:flex;
    justify-content:space-between;
    margin-right: 15vw;
    min-width:300px;
    
}
/* media (조건)을 활용하여 픽셀의 값에 따라서 보이는 화면을 다르게 할 수 있다. */
@media (max-width:900px){
    #container1 > header > #list{
        display:none;
    }
}

/* 로고 부분*/
#logo {
    margin: 0px 0px 0px 15vw;
    z-index:3;
    position: absolute;
    border: 1px solid rgb(163, 163, 163);
    width:150px;
    height: 120px;

}
img{
    width:100%;
    height:100%;
   
}
#container1 section{
    
    width:70%;
    height:100%;
    /* section 하위 요소들의 text는 전부 가운데 정렬이 기본이 된다. */
    text-align: center;
    position:relative;

}
section #model_name{
    display:inline-flex;
    width:30%;
    margin-top:50px;
    height:20px;
    justify-content: space-between;
    min-width: 190px;
}
#model_name > a{
    font-size:15px;
    color:white;
}
section #car_name{
    margin-top : 50px;

}
#car_name #p2{
    font-size:40px;
    font-weight:700;
}
/* 리스트 버튼 */
section #list_btn{
    
    margin-top:6vh;
    display:inline-flex;
    width:70%;
    height:10%;
    justify-content: space-between;

}

#list_btn a{
    color:white;
}
#list_btn #go_spec{
    display:flex;
    width:25%;
    border:1px white solid;
    justify-content: center;
    align-items: center;
    min-width:72px;

}
#go_spec:hover{
    cursor: pointer;
    animation:list_btnChange 0.5s;
    animation-fill-mode: both;
}

#list_btn #make_porsche{
    display:flex;
    width:40%;
    border:1px white solid;
    justify-content: center;
    align-items: center;
    min-width:160px;
}
#make_porsche:hover{
    cursor: pointer;
    animation:list_btnChange 0.5s;
    animation-fill-mode: both;
}
#list_btn #compare{
    display:flex;
    width:25%;
    border:1px white solid;
    justify-content: center;
    align-items: center;
    min-width:72px;
    
}
#compare:hover{
    cursor: pointer;
    animation:list_btnChange 0.5s;
    animation-fill-mode: both;
}
@keyframes list_btnChange{
    from{}
    to{color:red;
        border:1px red solid}
}
/* display:inline-flex 는 inline + flex으로 flex(부모 요소)로 부터 자식 요소들을 가운데 일정하게
정렬하기 쉽지만 flex의 부모 요소로 부터 가운데 정렬은 보통 inline block를 자식요소에 부여해서 정렬하는데
이미 flex로 부여해서 불가능하다 이를 inline-flex로 해결할 수 있다. */

/* 파워 & 스피드 */
section #text_speed{
    width:100%;
    height:10%;
    display:inline-flex;
    padding:35vh 0px 0px 0px ; 
           
}
#text_speed #power{
    width:30%;
    height:100%;  
    min-width:170px;
}
#text_speed #accleration{
    width:40%;
    height:100%; 
    min-width:220px;
}
#text_speed #topSpeed{
    width:30%;
    height:100%; 
    min-width:170px;
}
/* text-speed의 첫번째 문자열 폰트스타일 */
.p1{
    font-size:20px;
    font-weight: 700;
}
#menu_window{
    background-color: white;
    margin-left:0px 0px 0px 500px;
    height:90vh;
    right:0.1px;
    position:absolute;
    z-index:15;
}
#menu_col{
    width:100%;
    height:24%;
    border:1px blue solid;
    display: flex;
    justify-content: space-evenly;

}
#menu_img{
    width:40%;
    height:100%;
    border:1px rgb(0, 204, 255) solid;
    color:black;
}
