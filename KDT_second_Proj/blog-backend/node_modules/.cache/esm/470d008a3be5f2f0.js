let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_3be‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_3be‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_3be‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_3be‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_3be‍.w("./api",[["default",["api"],function(v){api=v}]]);_3be‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();







const app = new Koa();
const router = new Router();
const { PORT, MONGO_URI} = process.env;


mongoose
.connect(MONGO_URI)
 .then(() => {
    console.log('Connected to MongoDB')
   
})
.catch(e => {
    _3be‍.g.console.error(e)
});

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);
app.use(router.routes()).use(router.allowedMethods())

const port = PORT || 4000;
app.listen(port, () => {
    _3be‍.g.console.log('Listening to port %d', port)
})
