let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_ff7‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_ff7‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_ff7‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_ff7‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_ff7‍.w("./api",[["default",["api"],function(v){api=v}]]);_ff7‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();







// const posts = require('./posts')


const app = new Koa();
const router = new Router();
const { PORT, MONGO_URI} = process.env;


mongoose
.connect(MONGO_URI)
 .then(() => {
    console.log('Connected to MongoDB')
   
})
.catch(e => {
    _ff7‍.g.console.error(e)
});
// app.use (async(ctx, next) => {
//     console.log(ctx.url);
//     console.log(1);
//     if(ctx.query.authorized !== '1') {
//         ctx.status = 401; //Unauthorized
//         return;
//     }
//     await next();
//     console.log('END');
// })

// app.use((ctx, next) => {
//     console.log(2);
//     next();
// })

// app.use(ctx => {
//     ctx.body ='hello world';
// })
router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);




// router.get('/', ctx => {
//     ctx.body = '홈';
// })

// router.get('/about/:name?', ctx=> {
//     const { name } =ctx.params;
//     ctx.body = name? `${name}의 소개` : '소개';
// })

// router.get('/posts', ctx => {
//     const { id } = ctx.query;
//     ctx.body = id ? `포스트 #${id}` : '포스트 아이디가 없습니다.'
// })

app.use(router.routes()).use(router.allowedMethods())

const port = PORT || 4000;
app.listen(port, () => {
    _ff7‍.g.console.log('Listening to port %d', port)
})

// app.listen(4000, () => {
//     console.log('Listening to port 4000')
// })

// monule.exports = api;